# ===================================
# üóÑÔ∏è DATABASE CONFIGURATION
# ===================================
DATABASE_PROVIDER=firebase

# üî• Firebase Configuration (Primary Database)
FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@your-project.iam.gserviceaccount.com
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----"
FIREBASE_DATABASE_URL=https://your-project-default-rtdb.firebaseio.com

# Prisma Configuration (when using prisma)
# For SQLite (default):
DATABASE_URL="file:dev.sqlite"
# For PostgreSQL:
# DATABASE_URL="postgresql://username:password@localhost:5432/your-database?schema=public"
# For MySQL:
# DATABASE_URL="mysql://username:password@localhost:3306/your-database"

# üóÑÔ∏è Prisma Configuration (Alternative Database)
DATABASE_URL="file:./prisma/dev.sqlite"
# For PostgreSQL: DATABASE_URL="postgresql://username:password@localhost:5432/database"
# For MySQL: DATABASE_URL="mysql://username:password@localhost:3306/database"

# üçÉ MongoDB Configuration (Future Use)
MONGODB_CONNECTION_STRING=mongodb://localhost:27017
MONGODB_DATABASE_NAME=shopify_app

# üóÇÔ∏è Supabase Configuration (Future Use)
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your-anon-key

# ===================================
# üõçÔ∏è SHOPIFY CONFIGURATION
# ===================================
SHOPIFY_API_KEY=your-shopify-api-key
SHOPIFY_API_SECRET=your-shopify-api-secret
SCOPES=read_products,write_script_tags,read_themes
SHOPIFY_APP_URL=https://your-app-url.com

# ===================================
# üåç DEPLOYMENT CONFIGURATION
# ===================================
NODE_ENV=development

# üöÇ Railway (Optional)
RAILWAY_TOKEN=your-railway-token

# üü£ Heroku (Optional)
HEROKU_API_KEY=your-heroku-api-key
HEROKU_APP_NAME=your-app-name

# üîí SSL Configuration
SSL_CERT_PATH=/path/to/ssl/cert
SSL_KEY_PATH=/path/to/ssl/key

# ===================================
# üìä MONITORING & ANALYTICS (Optional)
# ===================================
# Sentry for error tracking
SENTRY_DSN=your-sentry-dsn

# Google Analytics
GA_TRACKING_ID=UA-XXXXX-X

# LogRocket for session replay
LOGROCKET_APP_ID=your-logrocket-app-id

# ===================================
# üîî NOTIFICATIONS (Optional)
# ===================================
# Slack webhook for notifications
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Discord webhook for notifications
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK

# Email configuration
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# ===================================
# üîß DEVELOPMENT TOOLS
# ===================================
# Prisma Studio
PRISMA_STUDIO_PORT=5555

# Debug mode
DEBUG=shopify:*

# API Rate limiting
API_RATE_LIMIT=100

# ===================================
# üß™ TESTING CONFIGURATION
# ===================================
# Test database
TEST_DATABASE_URL="file:./prisma/test.sqlite"
TEST_FIREBASE_PROJECT_ID=your-test-firebase-project

# Test Shopify app credentials
TEST_SHOPIFY_API_KEY=test-api-key
TEST_SHOPIFY_API_SECRET=test-api-secret

# ===================================
# üöÄ CI/CD SECRETS (GitHub Actions)
# ===================================
# These should be set as GitHub Secrets, not in .env files

# Staging Environment Secrets:
# STAGING_APP_URL
# STAGING_FIREBASE_PROJECT_ID
# STAGING_FIREBASE_CLIENT_EMAIL
# STAGING_FIREBASE_PRIVATE_KEY
# STAGING_SHOPIFY_API_KEY
# STAGING_SHOPIFY_API_SECRET

# Production Environment Secrets:
# PRODUCTION_APP_URL
# PRODUCTION_FIREBASE_PROJECT_ID
# PRODUCTION_FIREBASE_CLIENT_EMAIL
# PRODUCTION_FIREBASE_PRIVATE_KEY
# PRODUCTION_SHOPIFY_API_KEY
# PRODUCTION_SHOPIFY_API_SECRET

# Deployment Secrets:
# RAILWAY_TOKEN (if using Railway)
# HEROKU_API_KEY (if using Heroku)
# DOCKER_REGISTRY_TOKEN
# GITHUB_TOKEN (automatically provided)

# ===================================
# üìù NOTES
# ===================================
# 1. Never commit this file with real values to version control
# 2. Use strong, unique passwords and API keys
# 3. Rotate credentials regularly
# 4. Use environment-specific configurations
# 5. Set up proper monitoring and alerting
