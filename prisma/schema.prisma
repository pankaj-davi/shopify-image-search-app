generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Store {
  id              String    @id @default(cuid())
  shopDomain      String    @unique
  name            String
  myshopifyDomain String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  products        Product[]
}

model Product {
  id               String   @id @default(cuid())
  shopifyProductId String
  title            String
  handle           String
  status           String
  price            String?
  sku              String?
  shopDomain       String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  store            Store    @relation(fields: [shopDomain], references: [shopDomain])

  @@index([shopDomain])
  @@index([shopifyProductId])
}

model AppBlockUsage {
  id         String   @id @default(cuid())
  shopDomain String
  blockType  String
  action     String
  url        String?
  timestamp  DateTime @default(now())
  userAgent  String?
  metadata   String?
  sessionId  String?

  @@index([shopDomain])
  @@index([blockType])
  @@index([action])
  @@index([timestamp])
}

model VisualSearchUsage {
  id          String   @id @default(cuid())
  shopDomain  String
  searchType  String
  hasResults  Boolean  @default(false)
  resultCount Int      @default(0)
  imageSize   Int?
  imageType   String?
  cropData    String?
  timestamp   DateTime @default(now())
  sessionId   String?
  url         String?

  @@index([shopDomain])
  @@index([searchType])
  @@index([timestamp])
}

model StorefrontToken {
  id          String   @id
  shopDomain  String   @unique
  accessToken String
  tokenId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@index([shopDomain])
}
