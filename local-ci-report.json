{
  "timestamp": "2025-07-15T01:38:08.934Z",
  "totalTime": 31739,
  "results": {
    "lint": {
      "status": "passed",
      "duration": 945,
      "output": "\n> lint\n> eslint --cache --cache-location ./node_modules/.cache/eslint .\n\n"
    },
    "format": {
      "status": "failed",
      "duration": 1887,
      "error": "Command failed: npx prettier --check .\n[\u001b[33mwarn\u001b[39m] local-ci-report.json\n[\u001b[33mwarn\u001b[39m] scripts/ci-security-check.js\n[\u001b[33mwarn\u001b[39m] Code style issues found in 2 files. Run Prettier with --write to fix.\n",
      "output": "Checking formatting...\n",
      "stderr": "[\u001b[33mwarn\u001b[39m] local-ci-report.json\n[\u001b[33mwarn\u001b[39m] scripts/ci-security-check.js\n[\u001b[33mwarn\u001b[39m] Code style issues found in 2 files. Run Prettier with --write to fix.\n"
    },
    "typecheck": {
      "status": "passed",
      "duration": 2670,
      "output": ""
    },
    "security": {
      "status": "passed",
      "duration": 1138,
      "output": "# npm audit report\n\nesbuild  <=0.24.2\nSeverity: moderate\nesbuild enables any website to send any requests to the development server and read the response - https://github.com/advisories/GHSA-67mh-4wv8-2f99\nNo fix available\nnode_modules/esbuild\n  @remix-run/dev  *\n  Depends on vulnerable versions of @vanilla-extract/integration\n  Depends on vulnerable versions of esbuild\n  Depends on vulnerable versions of remark-mdx-frontmatter\n  node_modules/@remix-run/dev\n    @remix-run/fs-routes  *\n    Depend"
    },
    "tests": {
      "status": "passed_with_env_warnings",
      "duration": 16484,
      "output": "\n> test\n> node --test\n\nTAP version 13\n# 🗄️ Database Operation Test\n# ℹ️  Testing database environment setup...\n# ℹ️  Database provider: firebase\n# ✅ .env file found\n# ⚠️  Missing Firebase vars: FIREBASE_PROJECT_ID, FIREBASE_CLIENT_EMAIL, FIREBASE_PRIVATE_KEY\n# ✅ Script found: backup-database.js\n# ✅ Script found: restore-database.js\n# ✅ Script found: health-check.js\n# 📊 Environment Test Complete\n# Subtest: D:\\\\AI\\\\UUD\\\\new-p\\\\scripts\\\\db-test.js\nok 1 - D:\\\\AI\\\\UUD\\\\new-p\\\\scripts\\\\db-test.js\n  ---\n  duration_ms: 43.256\n  ...\n# 🚀 Local CI Testing - Preventing Remote Failures\n# =================================================\n# 📅 Started: 15/7/2025, 7:07:44 am\n# 📁 Directory: D:\\\\AI\\\\UUD\\\\new-p\n# 📋 Checking Prerequisites:\n# ✅ package.json exists\n# ✅ package-lock.json exists\n# ✅ ESLint config exists\n# ✅ TypeScript config exists\n# 🔄 🎨 Code Formatting Check...\n# 💻 Command: npx prettier --check .\n# ────────────────────────────────────────────────────────────\n# ❌ 🎨 Code Formatting Check failed (1976ms)\n# 📄 Output: Checking formatting...\n# 🚨 Error: [\u001b[33mwarn\u001b[39m] local-ci-report.json\n# [\u001b[33mwarn\u001b[39m] scripts/ci-security-check.js\n# [\u001b[33mwarn\u001b[39m] Code style issues found in 2 files. Run Prettier with --write to fix.\n# 🔄 🔍 ESLint Code Quality Check...\n# 💻 Command: npm run lint\n# ────────────────────────────────────────────────────────────\n# ✅ 🔍 ESLint Code Quality Check passed (928ms)\n# 📄 Output: > lint\n# > eslint --cache --cache-location ./node_modules/.cache/eslint .\n# 🔄 🔧 TypeScript Compilation Check...\n# 💻 Command: npx tsc --noEmit\n# ────────────────────────────────────────────────────────────\n# ✅ 🔧 TypeScript Compilation Check passed (2818ms)\n# 🔄 🔒 Security Vulnerability Check...\n# 💻 Command: npm audit --audit-level high\n# ────────────────────────────────────────────────────────────\n# ✅ 🔒 Security Vulnerability Check passed (1090ms)\n# 📄 No high/critical security vulnerabilities found\n# 🔄 🧪 Test Suite Execution...\n# 💻 Command: npm test\n# ────────────────────────────────────────────────────────────\n# ✅ 🧪 Test Suite Execution passed (274ms)\n# 📄 Output: > test\n# > node --test\n# 🔄 🏗️ Build System Validation...\n# 💻 Command: npm run build:check\n# ────────────────────────────────────────────────────────────\n# ✅ 🏗️ Build System Validation passed (8733ms)\n# ✅ Database health script exists\n# 🔄 🗄️ Database Health Check...\n# 💻 Command: npm run db:health\n# ────────────────────────────────────────────────────────────\n# ✅ 🗄️ Database Health Check passed (272ms)\n# 📄 Output: > db:health\n# > node scripts/health-check.js\n# 📊 LOCAL CI TEST RESULTS\n# ========================\n# ⏱️ Total time: 16108ms\n# 📈 Status: 6 passed, 1 failed, 0 skipped\n# ⚠️ 1 check(s) failed - fix before pushing\n# 📋 Detailed Results:\n# ──────────────────────\n# ✅ PASS lint         (928ms)\n# ❌ FAIL format       (1976ms)\n#      💡 Fix: Run 'npx prettier --write .' to fix formatting\n# ✅ PASS typecheck    (2818ms)\n# ✅ PASS security     (1090ms)\n# ✅ PASS tests        (274ms)\n# ✅ PASS build        (8733ms)\n# ✅ PASS database     (272ms)\n# 🎯 Next Steps:\n# ─────────────\n# 🔧 Fix these issues before pushing:\n#    • format: Run 'npx prettier --write .' to fix formatting\n# 🔄 After fixing, run this script again:\n#    npm run ci:test\n# 📖 Additional Commands:\n#    npm run ci:test        - Run this script again\n#    npm run ci:fix         - Auto-fix what can be fixed\n#    npm run check          - Quick health check\n# 💾 Detailed report saved to: local-ci-report.json\n# Subtest: D:\\\\AI\\\\UUD\\\\new-p\\\\scripts\\\\local-ci-test.js\nok 2 - D:\\\\AI\\\\UUD\\\\new-p\\\\scripts\\\\local-ci-test.js\n  ---\n  duration_ms: 16147.71\n  ...\n# 🚀 Local CI Testing - Preventing Remote Failures\n# =================================================\n# 📅 Started: 15/7/2025, 7:07:44 am\n# 📋 Checking Prerequisites:\n# ✅ package.json exists\n# ✅ package-lock.json exists\n# ✅ ESLint config exists\n# ✅ TypeScript config exists\n# 🔍 Running CI Checks:\n# 🔄 🎨 Code Formatting Check...\n# 💻 Command: npx prettier --check .\n# ────────────────────────────────────────────────────────────\n# ❌ 🎨 Code Formatting Check failed (2019ms)\n# 📄 Output: Checking formatting...\n# 🚨 Error: [\u001b[33mwarn\u001b[39m] local-ci-report.json\n# [\u001b[33mwarn\u001b[39m] scripts/ci-security-check.js\n# [\u001b[33mwarn\u001b[39m] Code style issues found in 2 files. Run Prettier with --write to fix.\n# 🔄 🔍 ESLint Code Quality Check...\n# 💻 Command: npm run lint\n# ────────────────────────────────────────────────────────────\n# ✅ 🔍 ESLint Code Quality Check passed (921ms)\n# 📄 Output: > lint\n# > eslint --cache --cache-location ./node_modules/.cache/eslint .\n# 🔄 🔧 TypeScript Compilation Check...\n# 💻 Command: npx tsc --noEmit\n# ────────────────────────────────────────────────────────────\n# ✅ 🔧 TypeScript Compilation Check passed (2820ms)\n# 🔄 🔒 Security Vulnerability Check (High/Critical)...\n# 💻 Command: npm audit --audit-level high\n# ────────────────────────────────────────────────────────────\n# ✅ 🔒 Security Vulnerability Check (High/Critical) passed (1124ms)\n# 🔄 🧪 Test Suite Execution...\n# 💻 Command: npm test\n# ────────────────────────────────────────────────────────────\n# ✅ 🧪 Test Suite Execution passed (271ms)\n# 📄 Output: > test\n# > node --test\n# 🔄 🏗️ Build System Validation...\n# 💻 Command: npm run build:check\n# ────────────────────────────────────────────────────────────\n# ✅ 🏗️ Build System Validation passed (8695ms)\n# 🔄 🗄️ Database Health Check...\n# 💻 Command: npm run db:health\n# ────────────────────────────────────────────────────────────\n# ✅ 🗄️ Database Health Check passed (270ms)\n# 📄 Output: > db:health\n# > node scripts/health-check.js\n# 📊 LOCAL CI TEST RESULTS\n# ========================\n# 📈 Summary: 6 passed, 1 failed, 0 skipped\n# ⚠️ 1 check(s) failed - fix before pushing\n# 🔧 Common fixes:\n#    npm run ci:fix     - Auto-fix formatting and lint issues\n#    npm run lint --fix - Fix ESLint issues\n#    npx prettier --write . - Fix formatting\n# 📋 Detailed Results:\n# ❌ FAIL format       (2019ms)\n# ✅ PASS lint         (921ms)\n# ✅ PASS typecheck    (2820ms)\n# ✅ PASS security     (1124ms)\n# ✅ PASS tests        (271ms)\n# ✅ PASS build        (8695ms)\n# ✅ PASS database     (270ms)\n# 💾 Report saved to: local-ci-report.json\n# 📖 Available Commands:\n#    npm run ci:test    - Run this comprehensive test\n#    npm run ci:fix     - Auto-fix common issues\n#    npm run pre-push   - Quick validation before push\n#    npm run check      - Alternative quick check\n# ❌ Exiting with 1 error(s)\n# Subtest: D:\\\\AI\\\\UUD\\\\new-p\\\\scripts\\\\simple-ci-test.js\nnot ok 3 - D:\\\\AI\\\\UUD\\\\new-p\\\\scripts\\\\simple-ci-test.js\n  ---\n  duration_ms: 16175.6039\n  location: 'D:\\\\AI\\\\UUD\\\\new-p\\\\scripts\\\\simple-ci-test.js:1:1'\n  failureType: 'testCodeFailure'\n  exitCode: 1\n  signal: ~\n  error: 'test failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n# Subtest: API Integration Tests\n    # Subtest: should respond to health check\n    ok 1 - should respond to health check\n      ---\n      duration_ms: 0.7066\n      ...\n    # Subtest: should handle Shopify webhook\n    ok 2 - should handle Shopify webhook\n      ---\n      duration_ms: 0.112\n      ...\n    1..2\nok 4 - API Integration Tests\n  ---\n  duration_ms: 1.6282\n  type: 'suite'\n  ...\n# Subtest: Database Tests\n    # Subtest: should connect to database\n    ok 1 - should connect to database\n      ---\n      duration_ms: 0.5689\n      ...\n    # Subtest: should perform CRUD operations\n    ok 2 - should perform CRUD operations\n      ---\n      duration_ms: 0.104\n      ...\n    1..2\nok 5 - Database Tests\n  ---\n  duration_ms: 1.4801\n  type: 'suite'\n  ...\n1..5\n# tests 7\n# suites 2\n# pass 6\n# fail 1\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 16209.4574\n",
      "envIssue": true
    },
    "build": {
      "status": "passed",
      "duration": 8323,
      "output": "\n> build:check\n> node scripts/simple-build-check.js\n\n\n🚀 Starting build with error catching...\n\nℹ️  Checking environment...\n✅ Environment check passed\nℹ️  Running TypeScript Check...\n✅ TypeScript Check completed\nℹ️  Running Linting...\n✅ Linting completed\nℹ️  Running Build...\n✅ Build completed\n\n==================================================\n📊 BUILD SUMMARY\n==================================================\n⏱️  Duration: 8.04s\n⚠️  Warnings: 0\n❌ Errors: 0\n\n🎉 Build completed successfully!\n===="
    },
    "database": {
      "status": "passed",
      "duration": 270,
      "output": "\n> db:health\n> node scripts/health-check.js\n\n"
    }
  },
  "summary": {
    "passed": 6,
    "failed": 1,
    "skipped": 0
  }
}
